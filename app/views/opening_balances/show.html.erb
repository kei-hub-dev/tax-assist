<% content_for :title, "残高設定" %>

<div class="page-center">
  <div class="auth wide">
    <h1 class="page-title">残高設定</h1>
    <p class="text-center mb-16">選択中の会計年度:<%= @period.accounting_year %> (繰越:<%= @prev_year %>)</p>

    <%= render "shared/error_messages", object: @opening_balance %>

    <%= form_with url: opening_balances_path, method: :patch, local: true, html: { id: "opening-balances-form" } do %>
      <table class="table mb-12">
        <thead>
          <tr>
            <th>科目</th>
            <th class="text-right">借方残高</th>
            <th class="text-right">貸方残高</th>
          </tr>
        </thead>
        <tbody>
          <% @accounts.each do |account| %>
            <% bal = @balances[account.id] %>
            <tr>
              <td><%= account.name %></td>
              <td class="text-right">
                <%= number_field_tag "opening_balances[#{account.id}][debit_amount]",  bal&.debit_amount || 0, min: 0, step: 1 %>
              </td>
              <td class="text-right">
                <%= number_field_tag "opening_balances[#{account.id}][credit_amount]", bal&.credit_amount || 0, min: 0, step: 1 %>
              </td>
            </tr>
          <% end %>

          <% if @accounts.empty? %>
            <tr>
              <td colspan="3" class="text-center text-muted">まず勘定科目を作成してください</td>
            </tr>
          <% end %>

          <tr id="sum-row" class="sum-row">
            <td>合計</td>
            <td id="total-debit"  class="text-right"><%= amt(@total_debit)  %></td>
            <td id="total-credit" class="text-right"><%= amt(@total_credit) %></td>
          </tr>
          <tr>
            <td colspan="3" id="sum-note" class="text-center text-danger hidden" aria-live="polite">
              借方と貸方の合計が一致していません
            </td>
          </tr>
        </tbody>
      </table>

      <div class="actions vstack">
        <%= link_to "戻る", accounting_menu_path, class: "btn btn-outline btn-sm btn-block" %>
        <%= submit_tag "保存", id: "ob-submit", class: "btn btn-sm btn-block", disabled: @accounts.empty? %>
      </div>
    <% end %>
  </div>
</div>

<script>
  (function() {
    var form = document.getElementById('opening-balances-form');
    if (!form) return;

    var debitInputs  = form.querySelectorAll('input[name^="opening_balances"][name$="[debit_amount]"]');
    var creditInputs = form.querySelectorAll('input[name^="opening_balances"][name$="[credit_amount]"]');
    var totalDebitEl  = document.getElementById('total-debit');
    var totalCreditEl = document.getElementById('total-credit');
    var sumRow  = document.getElementById('sum-row');
    var noteEl  = document.getElementById('sum-note');

    function toInt(v){ var n = parseInt(v,10); return isNaN(n) ? 0 : n; }

    function recalc() {
      var td = 0, tc = 0;
      debitInputs.forEach(function(i){ td += toInt(i.value); });
      creditInputs.forEach(function(i){ tc += toInt(i.value); });

      if (totalDebitEl)  totalDebitEl.textContent  = td.toLocaleString();
      if (totalCreditEl) totalCreditEl.textContent = tc.toLocaleString();

      var match = (td === tc);
      if (sumRow) {
        sumRow.classList.toggle('sum-ok', match);
        sumRow.classList.toggle('sum-ng', !match);
      }
      if (noteEl) noteEl.classList.toggle('hidden', match);
    }

    debitInputs.forEach(function(i){ i.addEventListener('input', recalc); });
    creditInputs.forEach(function(i){ i.addEventListener('input', recalc); });
    recalc();
  })();
</script>
